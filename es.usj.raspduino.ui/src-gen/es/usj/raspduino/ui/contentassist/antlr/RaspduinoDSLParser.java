/*
* generated by Xtext
*/
package es.usj.raspduino.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import es.usj.raspduino.services.RaspduinoDSLGrammarAccess;

public class RaspduinoDSLParser extends AbstractContentAssistParser {
	
	@Inject
	private RaspduinoDSLGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected es.usj.raspduino.ui.contentassist.antlr.internal.InternalRaspduinoDSLParser createParser() {
		es.usj.raspduino.ui.contentassist.antlr.internal.InternalRaspduinoDSLParser result = new es.usj.raspduino.ui.contentassist.antlr.internal.InternalRaspduinoDSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getModelAccess().getHardwareAlternatives_3_0(), "rule__Model__HardwareAlternatives_3_0");
					put(grammarAccess.getAbstractDeviceAccess().getAlternatives(), "rule__AbstractDevice__Alternatives");
					put(grammarAccess.getChangeActuatorAccess().getActuatorStateAlternatives_2_0(), "rule__ChangeActuator__ActuatorStateAlternatives_2_0");
					put(grammarAccess.getSensorListenerAccess().getAlternatives_3(), "rule__SensorListener__Alternatives_3");
					put(grammarAccess.getTimerAccess().getAlternatives_3(), "rule__Timer__Alternatives_3");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getSensorAccess().getGroup(), "rule__Sensor__Group__0");
					put(grammarAccess.getActuatorAccess().getGroup(), "rule__Actuator__Group__0");
					put(grammarAccess.getEventHandlerAccess().getGroup(), "rule__EventHandler__Group__0");
					put(grammarAccess.getChangeActuatorAccess().getGroup(), "rule__ChangeActuator__Group__0");
					put(grammarAccess.getSensorListenerAccess().getGroup(), "rule__SensorListener__Group__0");
					put(grammarAccess.getSensorListenerAccess().getGroup_3_2(), "rule__SensorListener__Group_3_2__0");
					put(grammarAccess.getTimerAccess().getGroup(), "rule__Timer__Group__0");
					put(grammarAccess.getTimerAccess().getGroup_3_0(), "rule__Timer__Group_3_0__0");
					put(grammarAccess.getTimerAccess().getGroup_3_1(), "rule__Timer__Group_3_1__0");
					put(grammarAccess.getTimerAccess().getGroup_3_2(), "rule__Timer__Group_3_2__0");
					put(grammarAccess.getTimerAccess().getGroup_3_3(), "rule__Timer__Group_3_3__0");
					put(grammarAccess.getTimerAccess().getGroup_3_4(), "rule__Timer__Group_3_4__0");
					put(grammarAccess.getTimerAccess().getGroup_3_5(), "rule__Timer__Group_3_5__0");
					put(grammarAccess.getTimerAccess().getGroup_3_6(), "rule__Timer__Group_3_6__0");
					put(grammarAccess.getTimerAccess().getGroup_3_7(), "rule__Timer__Group_3_7__0");
					put(grammarAccess.getTimerAccess().getGroup_3_8(), "rule__Timer__Group_3_8__0");
					put(grammarAccess.getModelAccess().getNameAssignment_1(), "rule__Model__NameAssignment_1");
					put(grammarAccess.getModelAccess().getHardwareAssignment_3(), "rule__Model__HardwareAssignment_3");
					put(grammarAccess.getModelAccess().getDevicesAssignment_4(), "rule__Model__DevicesAssignment_4");
					put(grammarAccess.getModelAccess().getEventHandlersAssignment_5(), "rule__Model__EventHandlersAssignment_5");
					put(grammarAccess.getModelAccess().getSensorListenersAssignment_6(), "rule__Model__SensorListenersAssignment_6");
					put(grammarAccess.getModelAccess().getTimersAssignment_7(), "rule__Model__TimersAssignment_7");
					put(grammarAccess.getSensorAccess().getNameAssignment_1(), "rule__Sensor__NameAssignment_1");
					put(grammarAccess.getSensorAccess().getPinAssignment_3(), "rule__Sensor__PinAssignment_3");
					put(grammarAccess.getActuatorAccess().getNameAssignment_1(), "rule__Actuator__NameAssignment_1");
					put(grammarAccess.getActuatorAccess().getPinAssignment_3(), "rule__Actuator__PinAssignment_3");
					put(grammarAccess.getEventHandlerAccess().getNameAssignment_1(), "rule__EventHandler__NameAssignment_1");
					put(grammarAccess.getEventHandlerAccess().getChangeActuatorsAssignment_2(), "rule__EventHandler__ChangeActuatorsAssignment_2");
					put(grammarAccess.getChangeActuatorAccess().getActuatorAssignment_0(), "rule__ChangeActuator__ActuatorAssignment_0");
					put(grammarAccess.getChangeActuatorAccess().getActuatorStateAssignment_2(), "rule__ChangeActuator__ActuatorStateAssignment_2");
					put(grammarAccess.getSensorListenerAccess().getSensorAssignment_1(), "rule__SensorListener__SensorAssignment_1");
					put(grammarAccess.getSensorListenerAccess().getTypeAssignment_3_0(), "rule__SensorListener__TypeAssignment_3_0");
					put(grammarAccess.getSensorListenerAccess().getTypeAssignment_3_1(), "rule__SensorListener__TypeAssignment_3_1");
					put(grammarAccess.getSensorListenerAccess().getTypeAssignment_3_2_0(), "rule__SensorListener__TypeAssignment_3_2_0");
					put(grammarAccess.getSensorListenerAccess().getLAssignment_3_2_1(), "rule__SensorListener__LAssignment_3_2_1");
					put(grammarAccess.getSensorListenerAccess().getHAssignment_3_2_3(), "rule__SensorListener__HAssignment_3_2_3");
					put(grammarAccess.getSensorListenerAccess().getEventHandlerAssignment_5(), "rule__SensorListener__EventHandlerAssignment_5");
					put(grammarAccess.getTimerAccess().getEventHandlerAssignment_1(), "rule__Timer__EventHandlerAssignment_1");
					put(grammarAccess.getTimerAccess().getRepeattypeAssignment_3_0_0(), "rule__Timer__RepeattypeAssignment_3_0_0");
					put(grammarAccess.getTimerAccess().getSecsAssignment_3_0_1(), "rule__Timer__SecsAssignment_3_0_1");
					put(grammarAccess.getTimerAccess().getRepeattypeAssignment_3_1_0(), "rule__Timer__RepeattypeAssignment_3_1_0");
					put(grammarAccess.getTimerAccess().getHoursAssignment_3_1_1(), "rule__Timer__HoursAssignment_3_1_1");
					put(grammarAccess.getTimerAccess().getMinutesAssignment_3_1_3(), "rule__Timer__MinutesAssignment_3_1_3");
					put(grammarAccess.getTimerAccess().getRepeattypeAssignment_3_2_0(), "rule__Timer__RepeattypeAssignment_3_2_0");
					put(grammarAccess.getTimerAccess().getHoursAssignment_3_2_1(), "rule__Timer__HoursAssignment_3_2_1");
					put(grammarAccess.getTimerAccess().getMinutesAssignment_3_2_3(), "rule__Timer__MinutesAssignment_3_2_3");
					put(grammarAccess.getTimerAccess().getRepeattypeAssignment_3_3_0(), "rule__Timer__RepeattypeAssignment_3_3_0");
					put(grammarAccess.getTimerAccess().getHoursAssignment_3_3_1(), "rule__Timer__HoursAssignment_3_3_1");
					put(grammarAccess.getTimerAccess().getMinutesAssignment_3_3_3(), "rule__Timer__MinutesAssignment_3_3_3");
					put(grammarAccess.getTimerAccess().getRepeattypeAssignment_3_4_0(), "rule__Timer__RepeattypeAssignment_3_4_0");
					put(grammarAccess.getTimerAccess().getHoursAssignment_3_4_1(), "rule__Timer__HoursAssignment_3_4_1");
					put(grammarAccess.getTimerAccess().getMinutesAssignment_3_4_3(), "rule__Timer__MinutesAssignment_3_4_3");
					put(grammarAccess.getTimerAccess().getRepeattypeAssignment_3_5_0(), "rule__Timer__RepeattypeAssignment_3_5_0");
					put(grammarAccess.getTimerAccess().getHoursAssignment_3_5_1(), "rule__Timer__HoursAssignment_3_5_1");
					put(grammarAccess.getTimerAccess().getMinutesAssignment_3_5_3(), "rule__Timer__MinutesAssignment_3_5_3");
					put(grammarAccess.getTimerAccess().getRepeattypeAssignment_3_6_0(), "rule__Timer__RepeattypeAssignment_3_6_0");
					put(grammarAccess.getTimerAccess().getHoursAssignment_3_6_1(), "rule__Timer__HoursAssignment_3_6_1");
					put(grammarAccess.getTimerAccess().getMinutesAssignment_3_6_3(), "rule__Timer__MinutesAssignment_3_6_3");
					put(grammarAccess.getTimerAccess().getRepeattypeAssignment_3_7_0(), "rule__Timer__RepeattypeAssignment_3_7_0");
					put(grammarAccess.getTimerAccess().getHoursAssignment_3_7_1(), "rule__Timer__HoursAssignment_3_7_1");
					put(grammarAccess.getTimerAccess().getMinutesAssignment_3_7_3(), "rule__Timer__MinutesAssignment_3_7_3");
					put(grammarAccess.getTimerAccess().getRepeattypeAssignment_3_8_0(), "rule__Timer__RepeattypeAssignment_3_8_0");
					put(grammarAccess.getTimerAccess().getHoursAssignment_3_8_1(), "rule__Timer__HoursAssignment_3_8_1");
					put(grammarAccess.getTimerAccess().getMinutesAssignment_3_8_3(), "rule__Timer__MinutesAssignment_3_8_3");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			es.usj.raspduino.ui.contentassist.antlr.internal.InternalRaspduinoDSLParser typedParser = (es.usj.raspduino.ui.contentassist.antlr.internal.InternalRaspduinoDSLParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public RaspduinoDSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(RaspduinoDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
